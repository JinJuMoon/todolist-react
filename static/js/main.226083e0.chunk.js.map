{"version":3,"sources":["components/TodoInput.js","components/TodoItem.js","components/TodoList.js","components/TodoCount.js","components/TodoFilter.js","components/TodoApp.js","App.js","index.js"],"names":["TodoInput","props","id","className","placeholder","autoFocus","onKeyPress","event","key","todo","title","target","value","state","onSubmit","TodoItem","useState","setTitle","defaultChecked","editing","type","onClick","onChangeItemState","checked","onDoubleClick","onStartEditingMode","onDeleteItem","onChange","onKeyDown","onExitEditingMode","onChangeItemTitle","TodoList","todosList","todos","map","TodoCount","count","href","onChangeViewMode","TodoFilter","filteredTodos","viewMode","filter","length","TodoApp","setTodos","nextId","setNextId","setViewMode","nextTodos","changeState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.226083e0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TodoInput = props => {\n    const onKeyPress = event => {\n        if (event.key === 'Enter') {\n            const todo = {\n                title: event.target.value,\n                state: 'active'\n            }\n            props.onSubmit(todo);\n            event.target.value = '';\n        }\n    };\n\n    return (\n        <div>\n            <input\n                id=\"new-todo-title\"\n                className=\"new-todo\"\n                placeholder=\"할일을 추가해주세요\"\n                autoFocus\n                onKeyPress={onKeyPress}\n            />\n        </div>\n    );\n};\n\nexport default TodoInput;","import React, {useState} from \"react\";\n\nconst TodoItem = props => {\n    const [title, setTitle] = useState(props.todo.title);\n\n    const onClickCheckBox = event => props.onChangeItemState(props.todo.id, event.target.checked)\n    const onClickDeleteBtn = event => props.onDeleteItem(props.todo.id)\n    const onDoubleClickTitle = event => props.onStartEditingMode(props.todo.id)\n    const onKeyDown = event => {\n        if (event.key === 'Escape') {\n            props.onExitEditingMode(props.todo.id);\n            setTitle(props.todo.title);\n        }\n        if (event.key === 'Enter') {\n            props.onChangeItemTitle(props.todo.id, event.target.value);\n        }\n    }\n\n    const onChange = event => {\n        setTitle(event.target.value);\n    }\n\n    const defaultChecked = props.todo.state === 'completed';\n\n    return (\n        <li id={props.todo.id} className={props.todo.editing ? 'editing' : props.todo.state}>\n            <div className=\"view\">\n                <input className=\"toggle\" defaultChecked={defaultChecked} type=\"checkbox\" onClick={onClickCheckBox}/>\n                <label className=\"label\" onDoubleClick={onDoubleClickTitle}>\n                    {title}\n                </label>\n                <button className=\"destroy\" onClick={onClickDeleteBtn} />\n            </div>\n            <input\n                className=\"edit\"\n                value={title}\n                onChange={onChange}\n                onKeyDown={onKeyDown}/>\n        </li>\n    );\n}\n\nexport default TodoItem;","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = props => {\n    const todosList = props.todos.map(todo => {\n        return (\n            <TodoItem\n                key={todo.id}\n                todo={todo}\n                onChangeItemState={props.onChangeItemState}\n                onDeleteItem={props.onDeleteItem}\n                onStartEditingMode={props.onStartEditingMode}\n                onExitEditingMode={props.onExitEditingMode}\n                onChangeItemTitle={props.onChangeItemTitle}\n            />\n        );\n    });\n\n    return (\n        <div className=\"main\">\n            <input className=\"toggle-all\" type=\"checkbox\" />\n            <ul id=\"todo-list\" className=\"todo-list\">\n                {todosList}\n            </ul>\n        </div>\n    );\n};\n\nexport default TodoList;","import React from \"react\";\n\nconst TodoCount = props => {\n    const onClickAllBtn = () => props.onChangeViewMode('all');\n    const onClickActiveBtn = () => props.onChangeViewMode('active');\n    const onClickCompletedBtn = () => props.onChangeViewMode('completed');\n\n    return (\n        <div className=\"count-container\">\n            <span className=\"todo-count\">총 <strong>{props.count}</strong> 개</span>\n            <ul className=\"filters\">\n                <li>\n                    <a className=\"all selected\" href=\"#/\" onClick={onClickAllBtn}>전체보기</a>\n                </li>\n                <li>\n                    <a className=\"active\" href=\"#/active\" onClick={onClickActiveBtn}>해야할 일</a>\n                </li>\n                <li>\n                    <a className=\"completed\" href=\"#/completed\" onClick={onClickCompletedBtn}>완료한 일</a>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default TodoCount;","import TodoList from \"./TodoList\";\nimport React from \"react\";\nimport TodoCount from \"./TodoCount\";\n\nconst TodoFilter = props => {\n    const filterTodos = () => {\n        return props.todos.filter(todo => todo.state === props.viewMode);\n    }\n\n    const filteredTodos = props.viewMode === 'all' ? props.todos : filterTodos();\n\n    return (\n        <>\n            <TodoList\n                todos={filteredTodos}\n                onChangeItemState={props.onChangeItemState}\n                onDeleteItem={props.onDeleteItem}\n                onStartEditingMode={props.onStartEditingMode}\n                onExitEditingMode={props.onExitEditingMode}\n                onChangeItemTitle={props.onChangeItemTitle}\n            />\n            <TodoCount count={filteredTodos.length} onChangeViewMode={props.onChangeViewMode}/>\n        </>\n        );\n}\n\nexport default TodoFilter;","import React, { useState } from \"react\";\nimport TodoInput from \"./TodoInput\";\nimport TodoFilter from \"./TodoFilter\";\n\nconst TodoApp = () => {\n    const [todos, setTodos] = useState([\n        {id: 0, title: '새로운 타이틀', state: 'active', editing: false},\n        {id: 1, title: '완료된 타이틀', state: 'completed', editing: true},\n        {id: 2, title: '완료된 타이틀', state: 'completed', editing: false}\n    ]);\n\n    const [nextId, setNextId] = useState(3);\n    const [viewMode, setViewMode] = useState('all');\n\n    const onSubmitTodos = todo => {\n        const nextTodos = [\n            ...todos,\n            {id: nextId, title: todo.title, state: todo.state, editing: false}\n        ];\n        setTodos(nextTodos);\n        setNextId(nextId + 1);\n    }\n\n    const onChangeItemState = (id, checked) => {\n        const changeState = checked => checked ? 'completed' : 'active';\n\n        const nextTodos = todos.map(todo =>\n            todo.id === id ? ({...todo, state: changeState(checked)}) : todo\n        )\n        setTodos(nextTodos);\n    }\n\n    const onDeleteItem = id => {\n        const nextTodos = todos.filter(todo => todo.id !== id);\n        setTodos(nextTodos);\n    }\n\n    const onStartEditingMode = id => {\n        const nextTodos = todos.map(todo =>\n            todo.id === id ? ({...todo, editing: true}) : todo\n        )\n        setTodos(nextTodos);\n    }\n\n    const onExitEditingMode = id => {\n        const nextTodos = todos.map(todo =>\n            todo.id === id ? ({...todo, editing: false}) : todo\n        )\n        setTodos(nextTodos);\n    }\n\n    const onChangeItemTitle = (id, title) => {\n        const nextTodos = todos.map(todo =>\n            todo.id === id ? ({...todo, title: title, editing: false}) : todo\n        )\n        setTodos(nextTodos);\n    }\n\n    const onChangeViewMode = viewMode => {\n        setViewMode(viewMode);\n    }\n\n    return (\n        <section className=\"todoapp\">\n            <h1>TODOS</h1>\n            <TodoInput onSubmit={onSubmitTodos} />\n            <TodoFilter\n                todos={todos}\n                viewMode={viewMode}\n                onChangeItemState={onChangeItemState}\n                onDeleteItem={onDeleteItem}\n                onStartEditingMode={onStartEditingMode}\n                onExitEditingMode={onExitEditingMode}\n                onChangeItemTitle={onChangeItemTitle}\n                onChangeViewMode={onChangeViewMode}\n            />\n        </section>\n    );\n};\n\nexport default TodoApp;","import React from \"react\";\nimport \"./App.css\";\nimport TodoApp from \"./components/TodoApp\";\n\nfunction App() {\n  return <TodoApp />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}